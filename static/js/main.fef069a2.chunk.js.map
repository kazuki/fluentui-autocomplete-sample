{"version":3,"sources":["autocomplete.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AutoComplete","props","defaultValue","originalItems","items","onGetText","_getText","onRenderItem","onRenderListFooter","onCalloutLayerMounted","onCalloutDismiss","onCalloutPositioned","onSearch","invokeOnChange","onChange","noOptionsText","useFilter","id","useId","useState","calloutVisible","selectedItem","selectedItemText","state","setState","refContainer","useRef","onClick","item","text","undefined","searchText","filterText","filter","includes","className","classNames","containerArea","ref","TextField","iconProps","iconName","_","newValue","onBlur","x","relatedTarget","startsWith","tmp","value","Callout","target","isBeakVisible","calloutWidth","current","clientWidth","directionalHintFixed","onLayerMounted","onDismiss","onPositioned","map","idx","key","toString","CommandButton","role","dropDownItem","styles","dropDownItemButtonStyles","length","semanticColors","getTheme","mergeStyleSets","display","width","selectors","backgroundColor","menuItemBackgroundHovered","height","padding","alignItems","flexContainer","count","dropDownItem1","dropDownItem2","palette","textAlign","flexGrow","overflow","textOverflow","paddingLeft","paddingRight","dropDownFooterDummy","dropDownFooter","position","bottom","fontSize","neutralQuaternaryAlt","App","refFooter","refFooterDummy","useCallback","resizeHack","style","maxWidth","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initializeIcons","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fef069a2.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { CommandButton, Callout, TextField, mergeStyleSets, getTheme } from '@fluentui/react';\nimport { useId } from '@uifabric/react-hooks';\n\nexport interface IAutoCompleteProps<T> {\n  defaultValue?: T;\n  items: T[];\n  onGetText?: (item: T) => string;\n  onRenderItem?: (item: T) => JSX.Element;\n  onRenderListFooter?: () => JSX.Element;\n  onCalloutLayerMounted?: () => void;\n  onCalloutDismiss?: () => void;\n  onCalloutPositioned?: () => void;\n  onSearch?: (newValue: string) => void;\n  onChange?: (item?: T) => void;\n  noOptionsText?: string;\n  useFilter?: boolean;\n}\n\ninterface IState<T> {\n  calloutVisible: boolean;\n  searchText?: string;\n  selectedItemText?: string;\n  selectedItem?: T;\n}\n\nexport function AutoComplete<T>(props: IAutoCompleteProps<T>) {\n  const {\n    defaultValue,\n    items: originalItems,\n    onGetText = _getText,\n    onRenderItem,\n    onRenderListFooter,\n    onCalloutLayerMounted,\n    onCalloutDismiss,\n    onCalloutPositioned,\n    onSearch,\n    onChange: invokeOnChange,\n    noOptionsText = 'No options',\n    useFilter = true,\n  } = props;\n  const id = useId();\n  const [state, setState] = useState<IState<T>>({\n    calloutVisible: false,\n    selectedItem: defaultValue,\n    selectedItemText: defaultValue && onGetText(defaultValue),\n  });\n  const refContainer = useRef<HTMLDivElement>(null);\n\n  const onBlur = (x: any) => {\n    if (x?.relatedTarget?.id?.startsWith(`${id}-`)) return;\n    const tmp = {...state, calloutVisible: false, searchText: undefined};\n    if (state.searchText != null && state.searchText !== state.selectedItemText) {\n      tmp.selectedItem = tmp.selectedItemText = undefined;\n      if (invokeOnChange)\n        invokeOnChange();\n    }\n    setState(tmp);\n  };\n  const onClick = (item?: T) => {\n    const text = item ? onGetText(item) : undefined;\n    setState({...state, calloutVisible: false, searchText: undefined,\n              selectedItemText: text, selectedItem: item});\n    if (state.selectedItem !== item && invokeOnChange)\n      invokeOnChange(item);\n  };\n  const onChange = (_: any, newValue?: string) => {\n    setState({...state, calloutVisible: true, searchText: newValue});\n    if (onSearch && newValue != null)\n      onSearch(newValue);\n  };\n  let items = originalItems;\n  const filterText = state.searchText != null ? state.searchText : state.selectedItemText;\n  if (useFilter && filterText)\n    items = originalItems.filter((item) => onGetText(item).includes(filterText));\n\n  return (\n    <>\n      <div id={id} className={classNames.containerArea} ref={refContainer}>\n        <TextField\n          id={`${id}-textfield`}\n          iconProps={{ iconName: 'ChevronDown' }}\n          defaultValue={defaultValue && onGetText(defaultValue)}\n          onClick={() => setState({...state, calloutVisible: true})}\n          onChange={onChange}\n          onBlur={onBlur}\n          value={state.searchText !== undefined ? state.searchText : state.selectedItemText || ''}\n        />\n      </div>\n      {state.calloutVisible && (\n        <Callout\n          id={`${id}-callout`}\n          target={`.${classNames.containerArea}`}\n          isBeakVisible={false}\n          calloutWidth={refContainer.current?.clientWidth || 0}\n          directionalHintFixed={true}\n          onLayerMounted={onCalloutLayerMounted}\n          onDismiss={onCalloutDismiss}\n          onPositioned={onCalloutPositioned}\n        >\n          {items.map((item, idx) => {\n            const key = (item as any).key || idx.toString();\n            return (\n              <CommandButton\n                id={`${id}-options-${key}`}\n                key={key}\n                role=\"option\"\n                className={classNames.dropDownItem}\n                onClick={() => onClick(item)}\n                styles={dropDownItemButtonStyles}\n              >{onRenderItem ? onRenderItem(item) : (item as any).text}</CommandButton>\n            );\n          })}\n          {items.length === 0 && <div className={classNames.noOptionsText} onClick={() => onClick()}>{noOptionsText}</div>}\n          {onRenderListFooter && onRenderListFooter()}\n        </Callout>\n      )}\n    </>\n  );\n}\n\nfunction _getText<T>(item: T): string {\n  return (item as any).text || '';\n}\n\nconst { semanticColors } = getTheme();\nconst classNames = mergeStyleSets({\n  containerArea: {\n  },\n  dropDownItem: {\n    display: 'flex',\n    width: '100%',\n    selectors: {\n      ':hover': {\n        backgroundColor: semanticColors.menuItemBackgroundHovered,\n      },\n    }\n  },\n  noOptionsText: {\n    height: '40px',\n    padding: '0px 10px',\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\nconst dropDownItemButtonStyles = {\n  flexContainer: {\n    width: '100%',\n  },\n}\n","import React, { useRef, useCallback } from 'react';\nimport { mergeStyleSets, getTheme } from '@fluentui/react';\nimport { AutoComplete } from './autocomplete';\n\ninterface IItem {\n  key: string;\n  text: string;\n  count: number;\n}\n\nconst items: IItem[] = [\n  { key: '0', text: 'Foo', count: 11123 },\n  { key: '1', text: 'Bar', count: 2344 },\n  { key: '2', text: 'Hoge', count: 341 },\n  { key: '3', text: 'Fuga', count: 123 },\n  { key: '4', text: 'awopifjaowiejfoawiejfaowiejfaowiejfaowiejfaoiwfejaoiwfjaoiwejfaoiwefjaoiwjefaoweifjawefawef', count: 64 },\n  { key: '5', text: 'AAAAA', count: 1 },\n  { key: '6', text: 'BBBBB', count: 0 },\n  { key: '7', text: 'CCCCC', count: 0 },\n  { key: '8', text: 'DDDDD', count: 0 },\n  { key: '9', text: 'EEEEE', count: 0 },\n];\nconst onRenderItem = (item: IItem): JSX.Element => {\n  return (\n    <>\n      <div className={classNames.dropDownItem1}>{item.text}</div>\n      <div className={classNames.dropDownItem2}>{item.count}</div>\n    </>\n  );\n};\n\nfunction App() {\n  const refFooter = useRef<HTMLDivElement>(null);\n  const refFooterDummy = useRef<HTMLDivElement>(null);\n  const onRenderListFooter = useCallback((): JSX.Element => {\n    return (\n      <>\n        <div className={classNames.dropDownFooterDummy} ref={refFooterDummy}></div>\n        <div className={classNames.dropDownFooter} ref={refFooter}>\n          <div>検索中とか...表示できる</div>\n          <div>(ほげほげ)</div>\n        </div>\n      </>\n    );\n  }, []);\n  const resizeHack = useCallback(() => {\n    if (refFooter.current && refFooterDummy.current)\n      refFooter.current.style.width = refFooterDummy.current.clientWidth + 'px';\n  }, []);\n\n  return (\n    <div style={{ maxWidth: '480px', margin: '3em'}}>\n      <AutoComplete\n        items={items}\n        onRenderItem={onRenderItem}\n        onRenderListFooter={onRenderListFooter}\n        onCalloutLayerMounted={resizeHack}\n        onCalloutPositioned={resizeHack}\n      />\n    </div>\n  );\n}\n\nconst { palette } = getTheme();\nconst classNames = mergeStyleSets({\n  dropDownItem1: {\n    textAlign: 'left',\n    flexGrow: 1,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    paddingLeft: '5px',\n  },\n  dropDownItem2: {\n    paddingLeft: '10px',\n    paddingRight: '5px',\n  },\n  dropDownFooterDummy: {\n    height: '32px',\n  },\n  dropDownFooter: {\n    position: 'fixed',\n    bottom: 0,\n    height: '32px',\n    display: 'flex',\n    fontSize: '80%',\n    backgroundColor: palette.neutralQuaternaryAlt,\n    alignItems: 'center',\n    selectors: {\n      'div:first-child': {\n        paddingLeft: '10px',\n        flexGrow: 1,\n      },\n      'div:last-child': {\n        paddingRight: '8px',\n      },\n    }\n  },\n});\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\n\ninitializeIcons();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}